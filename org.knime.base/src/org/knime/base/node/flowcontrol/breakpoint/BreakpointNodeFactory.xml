<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="breakpoint.png" type="Manipulator" 
xmlns="http://knime.org/node/v4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Breakpoint</name>

	<shortDescription>
		Allows to halt execution when a certain condition is
		met.
	</shortDescription>

	<fullDescription>
		<intro>
			This node halts execution when the incoming data table fulfills
			a user-specified condition.
		</intro>
		<option name="Breakpoint Enabled">
			Determines whether the breakpoint node should halt
			on a certain condition or just pass on the data.
		</option>
		<option name="Breakpoint active for">
			Specifies the condition that has to be met to halt execution.

			<p>
				<b>empty table:</b>
				Halts execution if the input table is empty.
			</p>

			<p>
				<b>active branch:</b>
				Halts execution if the breakpoint node is executed on an active
				branch.
			</p>

			<p>
				<b>inactive branch:</b>
				Halts execution if the breakpoint node is on an inactive branch,
				i.e., the incoming connection originates in a disabled port, such as
				the output port for an
				<i>IF Switch</i>
				node or a
				<i>Joiner</i>
				node.
			</p>

			<p>
				<b>variable matches value:</b>
				Halts execution if a specified flow variable matches a provided
				value.
				<br />
				<i>Select Variable:</i>
				Choose the flow variable that should be matched from a list of
				available variables.
				<br />
				<i>Enter Variable Value:</i>
				The value to match the specified flow variable against. Can be e.g.
				"true", "42", or "test".
			</p>
		</option>
		<option name="Custom message">
			Define a custom message that is printed when the
			breakpoint halts the execution.
		</option>
	</fullDescription>

	<ports>
		<inPort index="0" name="Input table">The input table.</inPort>
		<outPort index="0" name="Output table">The input table if not halted.</outPort>
	</ports>
	
	<keywords>
		<keyword>error message</keyword>
	</keywords>
</knimeNode>
