<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./append.png" type="Manipulator" xmlns="http://knime.org/node/v4.1" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
    <name>Concatenate</name>
    <shortDescription>Concatenates two tables row-wise.</shortDescription>
    <fullDescription>
        <intro>
            This node concatenates two tables. The table at inport 0 is given as the first
            input table (top input port), the table at inport 1 is the second table, resp. 
			Columns with equal names are concatenated (if the column types differ 
			the column type is the common base type of both input column types). 
			If one input table contains column names that the other table does not, the
			columns can either be filled with missing values or
			filtered out, i.e. they will not be in the output table.
			The dialog allows setting the following parameters:
		</intro>
		<option name="Output columns">
			<ul>
				<li><b>Intersection:</b> Use only the columns that appear
                    in every input table. Any other column is ignored and won't appear
                    in the output table.</li>
                <li><b>Union:</b> Use all columns from all input
                    tables. Fill rows with missing values if they miss cells for some columns.</li>
			</ul>
		</option>
		<option name="Resolution action for duplicate RowIDs">
			<ul>
				<li><b>Skip:</b> Duplicate row identifiers (RowID) occurring in the 
	        second table are not appended to the output table. This option is 
	        relatively memory intensive as it needs to cache the row IDs in
	        order to find duplicates. Furthermore a full data
			duplication is needed.</li>
				<li><b>Append suffix:</b> The output table will contain all rows, but
            duplicate row identifiers are labeled with a suffix. Similar to
            the "Skip" option this method is also memory intensive.</li>
            	<li><b>Fail:</b> The node will fail during execution if duplicate 
            row IDs are encountered. This option is efficient while checking 
            uniqueness.</li>
			</ul>
		</option>
        <option name="Enable hiliting">
            Advanced setting that enables hiliting between both inputs and the concatenated output
            table.
        </option>
		<link href="https://www.knime.com/knime-introductory-course/chapter3/section3/concatenation">
			KNIME E-Learning Course: Concatenation
		</link>
    </fullDescription>
    <ports>
        <inPort index="0" name="First table to concatenate">Table contributing the rows of the first part of the output table.</inPort>
        <inPort index="1" name="Second table to concatenate">Table contributing the rows of the second part of the output table.</inPort>
        
        <dynInPort insert-before="2" name="Additional table to concatenate" group-identifier="input">
        	Table contributing subsequent rows.
        </dynInPort>
        
        <outPort index="0" name="Concatenated table">Table with rows from both tables.</outPort>
	</ports>
	<keywords>
		<keyword>Row appender</keyword>
	</keywords>
</knimeNode>