<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="variable_condition_loop_end.png" type="LoopEnd"  xmlns="http://knime.org/node/v4.1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
    <name>Variable Condition Loop End</name>

    <shortDescription>Loop end node that checks for a condition in one of the flow variables</shortDescription>

    <fullDescription>
        <intro>
            In combination with a Generic Loop Start node, this node lets you execute the body of the
            loop until a certain condition on one of the flow variables is met. In the dialog you can choose one of the
            available flow variables and which condition should cause the loop to finish.
            <p>
                You can add more input and ouput tables using the &#8220;&#8230;&#8221; menu.
            </p>
        </intro>
        <option name="Available variables">
            In the list you can select one of the available flow variables. Below the list, you can choose, when the
            loop's execution should be finished, i.e. when the selected variable is, equal, greater, greater or equal,
            smaller, or smaller or equal than the given value. For string and boolean variables only the check for
            equality is possible.
        </option>
        <option name="Collect rows from last iteration">
            The default is to collect the rows from all the loop's iterations, including the last one after which the
            loop is stopped. If you de-select this option, the rows from the last iteration are not added to this output
            table.
        </option>
        <option name="Collect rows from last iteration only">
            If only the rows from the very last iteration should be collected in this table, you have to enable
            this option.
        </option>
        <option name="Add iteration column">
            Allows you to add a column containing the iteration number to this output table.
        </option>
		<option name="Propagate modified loop variables">
			If checked, variables whose values are modified within the loop are exported by this node. These variables
			must be declared outside the loop, i.e. injected into the loop from a side-branch or be available upstream
			of the corresponding loop start node. For the latter, any modification of a variable is passed back to the
			start node in subsequent iterations (e.g. moving sum calculation). Note that variables defined by the loop
            start node itself are excluded as these usually represent loop controls (e.g.
            <i>&#8220;currentIteration&#8221;</i>).
		</option>
        <link href="https://docs.knime.com/latest/analytics_platform_flow_control_guide/index.html#flow-variables">
            KNIME Flow Control Guide: Flow Variables
        </link>
        <link href="https://docs.knime.com/latest/analytics_platform_flow_control_guide/index.html#loops">
            KNIME Flow Control Guide: Section Loops
        </link>
    </fullDescription>

    <ports>
        <inPort index="0" name="Input table">
                Any datatable
        </inPort>
        <dynInPort name="Input table" group-identifier="Collector" insert-before="0">
                Any datatable
        </dynInPort>
        <outPort index="0" name="Collected results">
                Collected results from the loop body
        </outPort>
        <outPort index="1" name="Variable values">The selected flow variable's values in each iteration</outPort>
        <dynOutPort name="Collected results" group-identifier="Collector" insert-before="0">
                Collected results from the loop body
        </dynOutPort>
    </ports>
</knimeNode>
