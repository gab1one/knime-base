<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="stringtotime.png" type="Manipulator" xmlns="http://knime.org/node/v4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>String to Date&amp;Time</name>
	<shortDescription>
		Parses date and/or time strings into Date&amp;Time
		cells.
	</shortDescription>
	<fullDescription>
		<intro>
			<p>
				Parses the strings in the selected columns and converts them into
				Date&amp;Time cells. The expected format can be selected from a number
				of commonly used formats or specified manually (see section "Type and Format Selection").
			</p>
			<p>
				Since dates may contain localized terms such as month or weekday
				names, you can additionally specify a locale.
			</p>
		</intro>
		<tab name="Column Selection">
			<option name="Column Selector">
				Only the included columns will be parsed.
			</option>
		</tab>
		<tab name="Replace/Append Selection">
			<option name="Append selected columns">
				The selected columns will be appended to the
				input table. The suffix of the appended columns can be
				provided in
				the text field to the right.
			</option>
			<option name="Replace selected columns">
				The selected columns will be replaced by the
				converted columns.
			</option>
		</tab>
		<tab name="Type and Format Selection">
			<option name="New type">
				The type of the new data cells can be selected.
			</option>
			<option name="Date format">
				<p>
					A template ("format string") that specifies how to interpret the input. This template may contain
					placeholders for different descriptions of month names, weekday names, month and day numbers, year
					numbers etc., as well as other non-alphabetic characters that are expected to appear in the input
					string.
				</p>
				<p>
					Commonly used placeholders are <tt>y</tt> for year, <tt>M</tt> for month,
					<tt>d</tt> for day of month, <tt>H</tt> for hours, <tt>m</tt> for minutes and <tt>s</tt> for
					seconds. A full list of placeholders can be found below.
				</p>
				<p>
					The count of an individual placeholder letter defines the expected format. For example, a
					weekday can be represented by its full name ("Monday"), a short name ("Mon") or a narrow name ("M").
					Commonly used expressions are:
				</p>
				<ul>
					<li>
						<tt>yyyy</tt> matches "2021". <tt>yy</tt> matches years relative to the year 2000:
						"21" will be interpreted as "2021".
					</li>
					<li>
						<tt>MM</tt> matches month numbers like "01",
						<tt>MMM</tt> matches short month names like "Jan", <tt>MMMM</tt> matches full month
						names like "January".
					</li>
					<li>
						<tt>d</tt> matches day numbers like "5" and "05".
					</li>
				</ul>
				<p>
					<b>Examples:</b>
				</p>
				<ul>
					<li><tt>yyyy.MM.dd HH:mm:ss.SSS</tt> parses dates like "2001.07.04
						12:08:56.000"
					</li>
					<li><tt>yyyy-MM-dd'T'HH:mm:ss.SSSZ</tt> parses dates like
						"2001-07-04T12:08:56.235-0700"
					</li>
					<li><tt>yyyy-MM-dd'T'HH:mm:ss.SSSXXX'['VV']'</tt> parses dates like
						"2001-07-04T12:08:56.235+02:00[Europe/Berlin]"
					</li>
				</ul>
				<p>
					Placeholders can be declared as optional by wrapping them in square brackets. This is useful
					if it is unclear whether the input contains a certain field or not. For example:
				</p>
				<ul>
					<li><tt>HH:mm:ss[.SSS]</tt> parses times like "12:08:56.123" and
							"12:08:56"
					  </li>
					  <li><tt>yyyy-MM-dd'T'HH:mm[:ss[.SSS]]</tt> parses dates like
							"2001-07-04T12:08:56.235", "2001-07-04T12:08:56" and
							"2001-07-04T12:08"
					  </li>
				</ul>
				<p>
					Optional placeholders can also be useful if different formats are to be expected. For example,
					<tt>[MMMM][MMM] dd, yyyy</tt> matches both "April 02, 2021" and "Apr 02, 2021". Note that
					this will also match when no month description is given whatsoever.
				</p>
				<p>
					The full list of supported placeholders is given below. You can find a full, technical specification
					<a href="https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html">here</a>.
				</p>
				<ul>
					<li><tt>G</tt>: era</li>
					<li><tt>u</tt>: year</li>
					<li><tt>y</tt>: year of era</li>
					<li><tt>D</tt>: day of year</li>
					<li><tt>M</tt>: month in year (context sensitive)</li>
					<li><tt>L</tt>: month in year (standalone form)</li>
					<li><tt>d</tt>: day of month</li>
					<li><tt>Q</tt>: quarter of year</li>
					<li><tt>q</tt>: quarter of year</li>
					<li><tt>Y</tt>: week based year</li>
					<li><tt>w</tt>: week of week based year</li>
					<li><tt>W</tt>: week of month</li>
					<li><tt>E</tt>: day of week</li>
					<li><tt>e</tt>: localized day of week</li>
					<li><tt>c</tt>: localized day of week</li>
					<li><tt>F</tt>: week of month</li>
					<li><tt>a</tt>: am/pm of day</li>
					<li><tt>h</tt>: clock hour of am/pm (1-12)</li>
					<li><tt>K</tt>: hour of am/pm (0-11)</li>
					<li><tt>k</tt>: clock hour of am/pm (1-24)</li>
					<li><tt>H</tt>: hour of day (0-23)</li>
					<li><tt>m</tt>: minute of hour</li>
					<li><tt>s</tt>: second of minute</li>
					<li><tt>S</tt>: fraction of second</li>
					<li><tt>A</tt>: milli of day</li>
					<li><tt>n</tt>: nano of second</li>
					<li><tt>N</tt>: nano of second</li>
					<li><tt>V</tt>: time zone ID</li>
					<li><tt>z</tt>: time zone name</li>
					<li><tt>O</tt>: localized zone offset</li>
					<li><tt>X</tt>: zone offset (<tt>Z</tt> for zero)</li>
					<li><tt>x</tt>: zone offset</li>
					<li><tt>Z</tt>: zone offset</li>
					<li><tt>p</tt>: pad next</li>
					<li><tt>'</tt>: escape for text</li>
					<li><tt>''</tt>: single quote</li>
					<li><tt>[</tt>: optional section start</li>
					<li><tt>]</tt>: optional section end</li>
				</ul>
			</option>
			<option name="Locale">
				A
				<i>locale</i>
				can be chosen, which determines the language and geographic region
				for terms such as months
				or weekdays.
			</option>
			<option name="Content of the first cell">
				Shows the content of the first non-missing cell
				of the first included
				column to simplify format selection.
			</option>
			<option name="Guess data type and format">
				If pressed the data type and the format are
				guessed based on the
				content of the first cell. If none of the
				formats in the list is suitable, type and format will not change.
			</option>
		</tab>
		<tab name="Abort Execution">
			<option name="Fail on error">
				If checked, the node will abort the execution and
				fail on errors. If unchecked, missing values will be
				generated
				instead.
			</option>
		</tab>
	</fullDescription>
	<ports>
		<inPort index="0" name="Input table">
			Input table.
		</inPort>
		<outPort index="0" name="Output table">
			Output table containing the parsed
			columns.
		</outPort>
	</ports>
</knimeNode>
