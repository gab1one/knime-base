{
  "data" : {
    "model" : {
      "columnsToFormat" : {
        "selected" : [ "test1" ],
        "mode" : "MANUAL",
        "patternFilter" : {
          "pattern" : "",
          "isCaseSensitive" : false,
          "isInverted" : false
        },
        "manualFilter" : {
          "manuallySelected" : [ "test1" ],
          "manuallyDeselected" : [ ],
          "includeUnknownColumns" : true
        },
        "typeFilter" : {
          "selectedTypes" : [ ],
          "typeDisplays" : [ ]
        }
      },
      "numberMode" : "DECIMALS",
      "precision" : 3,
      "roundingMethod" : {
        "standard" : "HALF_AWAY_FROM_ZERO",
        "advanced" : "AWAY_FROM_ZERO"
      },
      "outputColumn" : "APPEND",
      "suffix" : " (Rounded)",
      "outputMode" : "AUTO"
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "columnsToFormat" : {
            "type" : "object",
            "properties" : {
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "includeUnknownColumns" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "manuallyDeselected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "manuallySelected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "manuallySelected" : [ ],
                  "manuallyDeselected" : [ ],
                  "includeUnknownColumns" : false
                }
              },
              "mode" : {
                "oneOf" : [ {
                  "const" : "MANUAL",
                  "title" : "Manual"
                }, {
                  "const" : "REGEX",
                  "title" : "Regex"
                }, {
                  "const" : "WILDCARD",
                  "title" : "Wildcard"
                }, {
                  "const" : "TYPE",
                  "title" : "Type"
                } ],
                "default" : "MANUAL"
              },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "isCaseSensitive" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "isInverted" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "pattern" : {
                    "type" : "string",
                    "default" : ""
                  }
                },
                "default" : {
                  "pattern" : "",
                  "isCaseSensitive" : false,
                  "isInverted" : false
                }
              },
              "selected" : {
                "default" : [ ],
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "typeDisplays" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "text" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "default" : {
                  "selectedTypes" : [ ],
                  "typeDisplays" : [ ]
                }
              }
            },
            "title" : "Columns to round",
            "description" : "Select the numeric input columns to round.",
            "default" : {
              "selected" : [ "test1" ],
              "mode" : "MANUAL",
              "patternFilter" : {
                "pattern" : "",
                "isCaseSensitive" : false,
                "isInverted" : false
              },
              "manualFilter" : {
                "manuallySelected" : [ "test1" ],
                "manuallyDeselected" : [ ],
                "includeUnknownColumns" : true
              },
              "typeFilter" : {
                "selectedTypes" : [ ],
                "typeDisplays" : [ ]
              }
            }
          },
          "numberMode" : {
            "oneOf" : [ {
              "const" : "DECIMALS",
              "title" : "Decimals"
            }, {
              "const" : "SIGNIFICANT_DIGITS",
              "title" : "Significant digits"
            }, {
              "const" : "INTEGER",
              "title" : "Integer"
            } ],
            "title" : "Rounding mode",
            "description" : "Select the rounding mode to apply.\n<ul>\n<li><b>Decimals</b>: Rounds numeric values up to the specified number of decimal places.\n</li>\n<li><b>Significant digits</b>: Only keeps the specified number of significant digits.</li>\n<li><b>Integer</b>: Converts numeric values to integer. Note that automatically converting <em>Number (double)</em> or\n<em>Number (long)</em> input columns to <em>Number (integer)</em> output columns might yield\nmissing values due to integer overflows.\n</li>\n</ul>",
            "default" : "DECIMALS"
          },
          "outputColumn" : {
            "oneOf" : [ {
              "const" : "REPLACE",
              "title" : "Replace"
            }, {
              "const" : "APPEND",
              "title" : "Append with suffix"
            } ],
            "title" : "Output columns",
            "description" : "Configure output column behavior.\n<ul>\n<li><b>Replace</b>: Replaces the input columns</li>\n<li><b>Append with suffix</b>: Appends additional output columns</li>\n</ul>",
            "default" : "APPEND"
          },
          "outputMode" : {
            "oneOf" : [ {
              "const" : "AUTO",
              "title" : "Auto"
            }, {
              "const" : "DOUBLE",
              "title" : "Double"
            }, {
              "const" : "STANDARD_STRING",
              "title" : "Standard string"
            }, {
              "const" : "PLAIN_STRING",
              "title" : "Plain string"
            }, {
              "const" : "ENGINEERING_STRING",
              "title" : "Engineering string"
            } ],
            "title" : "Output mode (legacy)",
            "description" : "Determines the formatting of the output columns.\n\n<ul>\n<li><b>Auto</b>: Sets output column types automatically based on input column types.\n</li>\n<li><b>Double</b>: Sets all output column types to real numbers.\n</li>\n<li><b>Standard string</b>: Returns the string representation of a number using scientific notation if an exponent is needed.\n</li>\n<li><b>Plain string</b>: Returns a string representation of a number without an exponent field.\n</li>\n<li><b>Engineering string</b>: Returns a string representation of a number, using engineering notation if an exponent is needed.\n</li>\n</ul>",
            "default" : "AUTO"
          },
          "precision" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Rounding to digits",
            "description" : "When rounding to <b>Decimals</b>, this sets the number of decimal places to keep.<br/>\nWhen rounding to <b>Significant digits</b>, this sets the number of significant digits to keep.\n",
            "default" : 3
          },
          "roundingMethod" : {
            "type" : "object",
            "properties" : {
              "advanced" : {
                "oneOf" : [ {
                  "const" : "AWAY_FROM_ZERO",
                  "title" : "Away from zero (Round Up)"
                }, {
                  "const" : "TOWARDS_ZERO",
                  "title" : "Towards zero (Round Down)"
                }, {
                  "const" : "TO_LARGER",
                  "title" : "To larger (Round Ceiling)"
                }, {
                  "const" : "TO_SMALLER",
                  "title" : "To smaller (Round Floor)"
                }, {
                  "const" : "HALF_TOWARDS_ZERO",
                  "title" : ".5 towards zero"
                }, {
                  "const" : "HALF_TO_EVEN_DIGIT",
                  "title" : ".5 to nearest even digit"
                } ],
                "title" : "Other rounding methods",
                "description" : "Select the advanced rounding method to apply.\n<ul>\n<li><b>Away from zero (Round Up)</b>: Rounds away from zero. Increments the last remaining digit by one, if there were more digits.\n</li>\n<li><b>Towards zero (Round Down)</b>: Rounds towards zero. Drops excess digits.\n</li>\n<li><b>To larger (Round Ceiling)</b>: Rounds towards positive infinity. If the result is positive, behaves as for\n'Away from zero (Round Up)'; if negative, behaves as for 'Towards zero (Round Down)'.\n</li>\n<li><b>To smaller (Round Floor)</b>: Rounds towards negative infinity. If the result is positive, behaves as for\n'Towards zero (Round Down)'; if negative, behaves as for 'Away from zero (Round Up)'.\n</li>\n<li><b>.5 towards zero</b>: Rounds towards the 'nearest neighbor'. If both neighbors are equidistant, it rounds down.\n</li>\n<li><b>.5 to nearest even digit</b>: Rounds towards the 'nearest neighbor'. If both neighbors are equidistant, it rounds towards the\n'even neighbor’.\n</li>\n</ul>",
                "default" : "AWAY_FROM_ZERO"
              },
              "standard" : {
                "oneOf" : [ {
                  "const" : "HALF_AWAY_FROM_ZERO",
                  "title" : "Standard (.5 away from zero)"
                }, {
                  "const" : "OTHER",
                  "title" : "Others"
                } ],
                "title" : "Rounding method",
                "description" : "Select if you want to use the standard rounding method or one of the other available rounding methods.\n\n<ul>\n<li><b>Standard (.5 away from zero)</b>: This is the standard rounding method. It rounds towards the 'nearest neighbor'. If both\nneighbors are equidistant, it rounds up.\n</li>\n<li><b>Others</b>: Provides a number of advanced rounding methods to choose from.\n</li>\n</ul>",
                "default" : "HALF_AWAY_FROM_ZERO"
              }
            },
            "default" : {
              "standard" : "HALF_AWAY_FROM_ZERO",
              "advanced" : "AWAY_FROM_ZERO"
            }
          },
          "suffix" : {
            "type" : "string",
            "title" : "Output column suffix",
            "description" : "Set the suffix to append to the new column names.",
            "default" : " (Rounded)"
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "type" : "Control",
      "scope" : "#/properties/model/properties/columnsToFormat",
      "options" : {
        "format" : "columnFilter",
        "possibleValues" : [ {
          "id" : "test1",
          "text" : "test1",
          "type" : {
            "id" : "org.knime.core.data.DoubleValue",
            "text" : "Number (double)"
          },
          "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
        } ],
        "showNoneColumn" : false,
        "showRowKeys" : false,
        "showSearch" : true,
        "showMode" : true
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/numberMode",
      "options" : {
        "format" : "valueSwitch"
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/precision",
      "options" : {
        "min" : 0.0,
        "max" : 350.0
      },
      "rule" : {
        "effect" : "HIDE",
        "condition" : {
          "scope" : "#/properties/model/properties/numberMode",
          "schema" : {
            "oneOf" : [ {
              "const" : "INTEGER"
            } ]
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/roundingMethod/properties/standard",
      "options" : {
        "format" : "valueSwitch"
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/roundingMethod/properties/advanced",
      "options" : {
        "format" : "radio",
        "radioLayout" : "vertical"
      },
      "rule" : {
        "effect" : "SHOW",
        "condition" : {
          "scope" : "#/properties/model/properties/roundingMethod/properties/standard",
          "schema" : {
            "oneOf" : [ {
              "const" : "OTHER"
            } ]
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/outputColumn",
      "options" : {
        "format" : "valueSwitch"
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/suffix",
      "options" : {
        "hideOnNull" : false
      },
      "rule" : {
        "effect" : "HIDE",
        "condition" : {
          "scope" : "#/properties/model/properties/outputColumn",
          "schema" : {
            "oneOf" : [ {
              "const" : "REPLACE"
            } ]
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/outputMode",
      "options" : {
        "isAdvanced" : true
      }
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "columnsToFormat" : {
            "configPaths" : [ [ "StringColNames", "filter-type" ], [ "StringColNames", "included_names" ], [ "StringColNames", "excluded_names" ], [ "StringColNames", "enforce_option" ], [ "StringColNames", "name_pattern", "pattern" ], [ "StringColNames", "name_pattern", "type" ], [ "StringColNames", "name_pattern", "caseSensitive" ], [ "StringColNames", "name_pattern", "excludeMatching" ] ],
            "type" : "object",
            "properties" : {
              "selected" : {
                "configPaths" : [ ]
              },
              "mode" : { },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "pattern" : { },
                  "isCaseSensitive" : { },
                  "isInverted" : { }
                }
              },
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "manuallySelected" : { },
                  "manuallyDeselected" : { },
                  "includeUnknownColumns" : { }
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : { },
                  "typeDisplays" : {
                    "type" : "array",
                    "configPaths" : [ ],
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "id" : { },
                        "text" : { }
                      }
                    }
                  }
                }
              }
            }
          },
          "numberMode" : {
            "configKey" : "NumberMode"
          },
          "precision" : {
            "configKey" : "PrecisionNumer"
          },
          "roundingMethod" : {
            "configKey" : "RoundingMode",
            "type" : "object",
            "properties" : {
              "standard" : { },
              "advanced" : { }
            }
          },
          "outputColumn" : {
            "configKey" : "AppendColumns"
          },
          "suffix" : {
            "configKey" : "ColumnSuffix"
          },
          "outputMode" : {
            "configKey" : "OutputType"
          }
        }
      }
    }
  }
}