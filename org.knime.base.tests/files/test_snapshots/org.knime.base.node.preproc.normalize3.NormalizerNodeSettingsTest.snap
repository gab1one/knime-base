{
  "data" : {
    "model" : {
      "dataColumnFilterConfig" : {
        "selected" : [ ],
        "mode" : "MANUAL",
        "patternFilter" : {
          "pattern" : "",
          "isCaseSensitive" : false,
          "isInverted" : false
        },
        "manualFilter" : {
          "manuallySelected" : [ ],
          "manuallyDeselected" : [ ],
          "includeUnknownColumns" : true
        },
        "typeFilter" : {
          "selectedTypes" : [ ],
          "typeDisplays" : [ ]
        }
      },
      "mode" : "MINMAX",
      "min" : 0.0,
      "max" : 1.0
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "dataColumnFilterConfig" : {
            "type" : "object",
            "properties" : {
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "includeUnknownColumns" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "manuallyDeselected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "manuallySelected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "manuallySelected" : [ ],
                  "manuallyDeselected" : [ ],
                  "includeUnknownColumns" : false
                }
              },
              "mode" : {
                "oneOf" : [ {
                  "const" : "MANUAL",
                  "title" : "Manual"
                }, {
                  "const" : "REGEX",
                  "title" : "Regex"
                }, {
                  "const" : "WILDCARD",
                  "title" : "Wildcard"
                }, {
                  "const" : "TYPE",
                  "title" : "Type"
                } ],
                "default" : "MANUAL"
              },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "isCaseSensitive" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "isInverted" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "pattern" : {
                    "type" : "string",
                    "default" : ""
                  }
                },
                "default" : {
                  "pattern" : "",
                  "isCaseSensitive" : false,
                  "isInverted" : false
                }
              },
              "selected" : {
                "default" : [ ],
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "typeDisplays" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "text" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "default" : {
                  "selectedTypes" : [ ],
                  "typeDisplays" : [ ]
                }
              }
            },
            "title" : "Number columns",
            "description" : "Select the numerical columns to normalize.",
            "default" : {
              "selected" : [ ],
              "mode" : "MANUAL",
              "patternFilter" : {
                "pattern" : "",
                "isCaseSensitive" : false,
                "isInverted" : false
              },
              "manualFilter" : {
                "manuallySelected" : [ ],
                "manuallyDeselected" : [ ],
                "includeUnknownColumns" : true
              },
              "typeFilter" : {
                "selectedTypes" : [ ],
                "typeDisplays" : [ ]
              }
            }
          },
          "max" : {
            "type" : "number",
            "format" : "double",
            "title" : "Maximum",
            "description" : "Specifies the new maximum for the normalized columns. Only active for min-max normalization.",
            "default" : 1.0
          },
          "min" : {
            "type" : "number",
            "format" : "double",
            "title" : "Minimum",
            "description" : "Specifies the new minimum for the normalized columns. Only active for min-max normalization.",
            "default" : 0.0
          },
          "mode" : {
            "oneOf" : [ {
              "const" : "MINMAX",
              "title" : "Min-max"
            }, {
              "const" : "Z_SCORE",
              "title" : "Z-score"
            }, {
              "const" : "DECIMALSCALING",
              "title" : "Decimal scaling"
            } ],
            "title" : "Normalization method",
            "description" : "The normalization method to use.\n<ul>\n<li><b>Min-max</b>: Linear transformation of all values such that the minimum and maximum in each column correspond\nto the values set below.\n</li>\n<li><b>Z-score</b>: Linear transformation such that the values in each column are Gaussian-(0,1)-distributed, i.e.\nmean is 0.0 and standard deviation is 1.0.\n</li>\n<li><b>Decimal scaling</b>: The maximum value in a column (both positive and negative) is divided j-times by 10 until its\nabsolute value is smaller or equal to 1. All values in the column are then divided by 10 to the\npower of j.\n</li>\n</ul>",
            "default" : "MINMAX"
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "type" : "Control",
      "scope" : "#/properties/model/properties/dataColumnFilterConfig",
      "options" : {
        "format" : "columnFilter",
        "possibleValues" : [ {
          "id" : "test1",
          "text" : "test1",
          "type" : {
            "id" : "org.knime.core.data.IntValue",
            "text" : "Number (integer)"
          },
          "compatibleTypes" : [ "org.knime.core.data.IntValue", "org.knime.core.data.DataValue", "org.knime.core.data.LongValue", "org.knime.core.data.DoubleValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
        }, {
          "id" : "test2",
          "text" : "test2",
          "type" : {
            "id" : "org.knime.core.data.DoubleValue",
            "text" : "Number (double)"
          },
          "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
        } ],
        "showNoneColumn" : false,
        "showRowKeys" : false,
        "showSearch" : true,
        "showMode" : true
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/mode",
      "options" : {
        "format" : "valueSwitch"
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/min",
      "rule" : {
        "effect" : "SHOW",
        "condition" : {
          "scope" : "#/properties/model/properties/mode",
          "schema" : {
            "oneOf" : [ {
              "const" : "MINMAX"
            } ]
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/max",
      "rule" : {
        "effect" : "SHOW",
        "condition" : {
          "scope" : "#/properties/model/properties/mode",
          "schema" : {
            "oneOf" : [ {
              "const" : "MINMAX"
            } ]
          }
        }
      }
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "dataColumnFilterConfig" : {
            "type" : "object",
            "properties" : {
              "selected" : {
                "configPaths" : [ ]
              },
              "mode" : { },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "pattern" : { },
                  "isCaseSensitive" : { },
                  "isInverted" : { }
                }
              },
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "manuallySelected" : { },
                  "manuallyDeselected" : { },
                  "includeUnknownColumns" : { }
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : { },
                  "typeDisplays" : {
                    "configPaths" : [ ]
                  }
                }
              }
            },
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ [ "data-column-filter", "filter-type" ], [ "data-column-filter", "included_names" ], [ "data-column-filter", "excluded_names" ], [ "data-column-filter", "enforce_option" ], [ "data-column-filter", "name_pattern", "pattern" ], [ "data-column-filter", "name_pattern", "type" ], [ "data-column-filter", "name_pattern", "caseSensitive" ], [ "data-column-filter", "name_pattern", "excludeMatching" ] ]
            } ]
          },
          "mode" : {
            "configKey" : "mode"
          },
          "min" : {
            "configKey" : "new-min"
          },
          "max" : {
            "configKey" : "new-max"
          }
        }
      }
    }
  }
}