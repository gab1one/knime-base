{
  "data" : {
    "model" : {
      "decimalSep" : ".",
      "thousandsSep" : "",
      "parseType" : "DOUBLE",
      "genericParse" : false,
      "failOnError" : false,
      "inclCols" : {
        "mode" : "MANUAL",
        "patternFilter" : {
          "pattern" : "",
          "isCaseSensitive" : false,
          "isInverted" : false
        },
        "manualFilter" : {
          "manuallySelected" : [ "test2" ],
          "manuallyDeselected" : [ ],
          "includeUnknownColumns" : true
        },
        "typeFilter" : {
          "selectedTypes" : [ ],
          "typeDisplays" : [ ]
        }
      }
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "decimalSep" : {
            "type" : "string",
            "title" : "Decimal separator",
            "description" : "Choose a decimal separator, which is used to mark the boundary between the integral and the  fractional parts of the decimal string.",
            "default" : "."
          },
          "failOnError" : {
            "type" : "boolean",
            "title" : "Fail on error",
            "description" : "When checked, the node will fail if an error occurs.",
            "default" : false
          },
          "genericParse" : {
            "type" : "boolean",
            "title" : "Accept type suffix, e.g. 'd', 'D', 'f', 'F'",
            "description" : "When checked, the type suffix will be accepted, otherwise it fails to parse input like <tt>1d</tt>. These suffixes are typically used in java-style programs to represent floating point numbers ('f' for float and 'd' for double). Default is not checked.",
            "default" : false
          },
          "inclCols" : {
            "type" : "object",
            "properties" : {
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "includeUnknownColumns" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "manuallyDeselected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "manuallySelected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "manuallySelected" : [ ],
                  "manuallyDeselected" : [ ],
                  "includeUnknownColumns" : false
                }
              },
              "mode" : {
                "oneOf" : [ {
                  "const" : "MANUAL",
                  "title" : "Manual"
                }, {
                  "const" : "REGEX",
                  "title" : "Regex"
                }, {
                  "const" : "WILDCARD",
                  "title" : "Wildcard"
                }, {
                  "const" : "TYPE",
                  "title" : "Type"
                } ],
                "default" : "MANUAL"
              },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "isCaseSensitive" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "isInverted" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "pattern" : {
                    "type" : "string",
                    "default" : ""
                  }
                },
                "default" : {
                  "pattern" : "",
                  "isCaseSensitive" : false,
                  "isInverted" : false
                }
              },
              "selected" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "selectedTypes" : [ ],
                  "typeDisplays" : [ ]
                }
              }
            },
            "title" : "Column selection",
            "description" : "Move the columns of interest into the &quot;Includes&quot; list",
            "default" : {
              "mode" : "MANUAL",
              "patternFilter" : {
                "pattern" : "",
                "isCaseSensitive" : false,
                "isInverted" : false
              },
              "manualFilter" : {
                "manuallySelected" : [ "test2" ],
                "manuallyDeselected" : [ ],
                "includeUnknownColumns" : true
              },
              "typeFilter" : {
                "selectedTypes" : [ ],
                "typeDisplays" : [ ]
              }
            }
          },
          "parseType" : {
            "oneOf" : [ {
              "const" : "INT",
              "title" : "Number (Integer)"
            }, {
              "const" : "DOUBLE",
              "title" : "Number (Double)"
            }, {
              "const" : "LONG",
              "title" : "Number (Long)"
            } ],
            "title" : "Type",
            "description" : "Choose the DataType that your string should be converted to.",
            "default" : "DOUBLE"
          },
          "thousandsSep" : {
            "type" : "string",
            "title" : "Thousands separator",
            "description" : "Choose a thousands separator used in the decimal string to group together three digits.",
            "default" : ""
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Column Selection",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/inclCols",
        "options" : {
          "format" : "typedStringFilter",
          "unknownValuesText" : "Any unknown column",
          "emptyStateLabel" : "No columns in this list.",
          "choicesProvider" : "org.knime.core.webui.node.dialog.defaultdialog.widget.choices.column.CompatibleColumnsProvider$StringColumnsProvider"
        }
      } ]
    }, {
      "label" : "Parsing options",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/decimalSep"
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/thousandsSep"
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/parseType"
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/genericParse",
        "options" : {
          "format" : "checkbox"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/failOnError",
        "options" : {
          "format" : "checkbox"
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "decimalSep" : {
            "configPaths" : [ [ "decimal_separator" ] ]
          },
          "thousandsSep" : {
            "configPaths" : [ [ "thousands_separator" ] ]
          },
          "parseType" : {
            "configPaths" : [ [ "parse_type" ] ]
          },
          "genericParse" : {
            "configPaths" : [ [ "generic_parse" ] ]
          },
          "failOnError" : {
            "configPaths" : [ [ "fail_on_error" ] ]
          },
          "inclCols" : {
            "configPaths" : [ [ "include", "filter-type" ], [ "include", "included_names" ], [ "include", "excluded_names" ], [ "include", "enforce_option" ], [ "include", "name_pattern", "pattern" ], [ "include", "name_pattern", "type" ], [ "include", "name_pattern", "caseSensitive" ], [ "include", "name_pattern", "excludeMatching" ] ]
          }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scopes" : null,
    "id" : "org.knime.core.webui.node.dialog.defaultdialog.widget.choices.column.CompatibleColumnsProvider$StringColumnsProvider",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "test2",
        "text" : "test2",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      } ]
    } ]
  } ]
}