{
  "data" : {
    "model" : {
      "valueColumns" : {
        "mode" : "MANUAL",
        "patternFilter" : {
          "pattern" : "",
          "isCaseSensitive" : false,
          "isInverted" : false
        },
        "manualFilter" : {
          "manuallySelected" : [ ],
          "manuallyDeselected" : [ ],
          "includeUnknownColumns" : false
        },
        "typeFilter" : {
          "selectedTypes" : [ ],
          "typeDisplays" : [ ]
        }
      },
      "onMissing" : "OMIT",
      "defaultValueString" : "missing",
      "defaultValueBoolean" : "FALSE",
      "defaultValueInteger" : 0,
      "defaultValueLong" : 0,
      "defaultValueDouble" : 0.0
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "defaultValueBoolean" : {
            "oneOf" : [ {
              "const" : "TRUE",
              "title" : "true"
            }, {
              "const" : "FALSE",
              "title" : "false"
            } ],
            "title" : "Default boolean",
            "description" : "The default flow variable value for boolean columns in case of an empty input table\nor a missing value in the first row of the input table.\n",
            "default" : "FALSE"
          },
          "defaultValueDouble" : {
            "type" : "number",
            "format" : "double",
            "title" : "Default double",
            "description" : "The default flow variable value for double columns in case of an empty input table\nor a missing value in the first row of the input table.\n",
            "default" : 0.0
          },
          "defaultValueInteger" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Default integer",
            "description" : "The default flow variable value for integer columns in case of an empty input table\nor a missing value in the first row of the input table.\n",
            "default" : 0
          },
          "defaultValueLong" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Default long",
            "description" : "The default flow variable value for long columns in case of an empty input table\nor a missing value in the first row of the input table.\n",
            "default" : 0
          },
          "defaultValueString" : {
            "type" : "string",
            "title" : "Default string",
            "description" : "The default flow variable value for string columns in case of an empty input table\nor a missing value in the first row of the input table.\n",
            "default" : "missing"
          },
          "onMissing" : {
            "oneOf" : [ {
              "const" : "FAIL",
              "title" : "Fail"
            }, {
              "const" : "DEFAULT",
              "title" : "Use defaults"
            }, {
              "const" : "OMIT",
              "title" : "Ignore"
            } ],
            "title" : "If value in cell is missing",
            "description" : "Behavior in case of missing values in the first row or an input table with no rows.\n<ul>\n    <li>\n        <b>Fail:</b> Ensures that the node will fail during execution if the input table is empty\n        or contains missing values in the columns to convert.\n    </li>\n    <li>\n        <b>Use defaults:</b> Replaces missing values with the configured defaults.\n        If a column has a type for which no flow variable type exists, the default value for missing strings\n        will be output. If the column holds lists or sets of string,\n        boolean, double, integer, or long, an empty list of the according type will be output.\n        If the column holds lists or sets of another type, an empty string list will be output.\n    </li>\n    <li>\n        <b>Ignore:</b> Missing cells will not be converted and therefore be omitted from the output.\n    </li>\n</ul>\n",
            "default" : "OMIT"
          },
          "valueColumns" : {
            "type" : "object",
            "properties" : {
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "includeUnknownColumns" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "manuallyDeselected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "manuallySelected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "manuallySelected" : [ ],
                  "manuallyDeselected" : [ ],
                  "includeUnknownColumns" : false
                }
              },
              "mode" : {
                "oneOf" : [ {
                  "const" : "MANUAL",
                  "title" : "Manual"
                }, {
                  "const" : "REGEX",
                  "title" : "Regex"
                }, {
                  "const" : "WILDCARD",
                  "title" : "Wildcard"
                }, {
                  "const" : "TYPE",
                  "title" : "Type"
                } ],
                "default" : "MANUAL"
              },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "isCaseSensitive" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "isInverted" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "pattern" : {
                    "type" : "string",
                    "default" : ""
                  }
                },
                "default" : {
                  "pattern" : "",
                  "isCaseSensitive" : false,
                  "isInverted" : false
                }
              },
              "selected" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "selectedTypes" : [ ],
                  "typeDisplays" : [ ]
                }
              }
            },
            "title" : "Output as variables",
            "description" : "Select the columns to be converted to flow variables. For each selected column, a flow variable\nis created. The name of the flow variable corresponds to the column name and the value corresponds\nto the value of the first row in that column.\n",
            "default" : {
              "mode" : "MANUAL",
              "patternFilter" : {
                "pattern" : "",
                "isCaseSensitive" : false,
                "isInverted" : false
              },
              "manualFilter" : {
                "manuallySelected" : [ ],
                "manuallyDeselected" : [ ],
                "includeUnknownColumns" : false
              },
              "typeFilter" : {
                "selectedTypes" : [ ],
                "typeDisplays" : [ ]
              }
            }
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Output as variables",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/valueColumns",
        "options" : {
          "format" : "typedStringFilter",
          "unknownValuesText" : "Any unknown column",
          "emptyStateLabel" : "No columns in this list."
        },
        "providedOptions" : [ "possibleValues" ]
      } ]
    }, {
      "label" : "Missing Values",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/onMissing",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValueString",
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/onMissing",
            "schema" : {
              "oneOf" : [ {
                "const" : "DEFAULT"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValueBoolean",
        "options" : {
          "format" : "valueSwitch"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/onMissing",
            "schema" : {
              "oneOf" : [ {
                "const" : "DEFAULT"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValueInteger",
        "options" : {
          "validation" : {
            "max" : {
              "errorMessage" : "The value must not exceed 2147483647.",
              "parameters" : {
                "isExclusive" : false,
                "max" : 2.147483647E9
              }
            },
            "min" : {
              "errorMessage" : "The value must be at least -2147483648.",
              "parameters" : {
                "isExclusive" : false,
                "min" : -2.147483648E9
              }
            }
          }
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/onMissing",
            "schema" : {
              "oneOf" : [ {
                "const" : "DEFAULT"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValueLong",
        "options" : {
          "validation" : {
            "max" : {
              "errorMessage" : "Value too large to process without risking precision loss (> 9007199254740991).",
              "parameters" : {
                "isExclusive" : false,
                "max" : 9.007199254740991E15
              }
            },
            "min" : {
              "errorMessage" : "Value too small to process without risking precision loss (< -9007199254740991).",
              "parameters" : {
                "isExclusive" : false,
                "min" : -9.007199254740991E15
              }
            }
          }
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/onMissing",
            "schema" : {
              "oneOf" : [ {
                "const" : "DEFAULT"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/defaultValueDouble",
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/onMissing",
            "schema" : {
              "oneOf" : [ {
                "const" : "DEFAULT"
              } ]
            }
          }
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "valueColumns" : {
            "configPaths" : [ [ "column_selection", "filter-type" ], [ "column_selection", "included_names" ], [ "column_selection", "excluded_names" ], [ "column_selection", "enforce_option" ], [ "column_selection", "name_pattern", "pattern" ], [ "column_selection", "name_pattern", "type" ], [ "column_selection", "name_pattern", "caseSensitive" ], [ "column_selection", "name_pattern", "excludeMatching" ] ]
          },
          "onMissing" : {
            "configKey" : "missing_value_policy"
          },
          "defaultValueString" : {
            "configKey" : "default_value_string"
          },
          "defaultValueBoolean" : {
            "configPaths" : [ [ "default_value_boolean" ] ]
          },
          "defaultValueInteger" : {
            "configKey" : "default_value_integer"
          },
          "defaultValueLong" : {
            "configKey" : "default_value_long"
          },
          "defaultValueDouble" : {
            "configKey" : "default_value_double"
          }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scope" : "#/properties/model/properties/valueColumns",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "test1",
        "text" : "test1",
        "type" : {
          "id" : "org.knime.core.data.DoubleValue",
          "text" : "Number (Float)"
        }
      }, {
        "id" : "test2",
        "text" : "test2",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      } ]
    } ]
  } ]
}