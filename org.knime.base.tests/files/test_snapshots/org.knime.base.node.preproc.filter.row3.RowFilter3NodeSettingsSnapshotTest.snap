{
  "data" : {
    "model" : {
      "column" : {
        "selected" : "BoolCol",
        "compatibleTypes" : [ "org.knime.core.data.BooleanValue", "org.knime.core.data.DataValue", "org.knime.core.data.IntValue", "org.knime.core.data.LongValue", "org.knime.core.data.DoubleValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue", "org.knime.core.data.NominalValue" ]
      },
      "operator" : "EQ",
      "caseMatching" : "CASESENSITIVE",
      "value" : "",
      "type" : "org.knime.core.data.def.BooleanCell",
      "outputMode" : "INCLUDE"
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "caseMatching" : {
            "oneOf" : [ {
              "const" : "CASESENSITIVE",
              "title" : "Case sensitive"
            }, {
              "const" : "CASEINSENSITIVE",
              "title" : "Case insensitive"
            } ],
            "title" : "Case matching",
            "description" : "TODO",
            "default" : "CASESENSITIVE"
          },
          "column" : {
            "type" : "object",
            "properties" : {
              "compatibleTypes" : {
                "configKeys" : [ "compatibleTypes_Internals" ],
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "configKeys" : [ "compatibleTypes_Internals" ]
                }
              },
              "selected" : {
                "type" : "string"
              }
            },
            "title" : "Filter column",
            "description" : "Choose the column in which to filter for values",
            "default" : {
              "selected" : "BoolCol",
              "compatibleTypes" : [ "org.knime.core.data.BooleanValue", "org.knime.core.data.DataValue", "org.knime.core.data.IntValue", "org.knime.core.data.LongValue", "org.knime.core.data.DoubleValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue", "org.knime.core.data.NominalValue" ]
            }
          },
          "operator" : {
            "oneOf" : [ {
              "const" : "EQ",
              "title" : "="
            }, {
              "const" : "NEQ",
              "title" : "≠"
            }, {
              "const" : "LT",
              "title" : "<"
            }, {
              "const" : "LTE",
              "title" : "≤"
            }, {
              "const" : "GT",
              "title" : ">"
            }, {
              "const" : "GTE",
              "title" : "≥"
            }, {
              "const" : "FIRST_N_ROWS",
              "title" : "First n rows"
            }, {
              "const" : "LAST_N_ROWS",
              "title" : "Last n rows"
            }, {
              "const" : "REGEX",
              "title" : "matches regex"
            }, {
              "const" : "WILDCARD",
              "title" : "matches wildcard"
            }, {
              "const" : "IS_TRUE",
              "title" : "is true"
            }, {
              "const" : "IS_FALSE",
              "title" : "is false"
            }, {
              "const" : "IS_MISSING",
              "title" : "is missing"
            } ],
            "title" : "Operator",
            "description" : "TODO",
            "default" : "EQ"
          },
          "outputMode" : {
            "oneOf" : [ {
              "const" : "INCLUDE",
              "title" : "Include matches"
            }, {
              "const" : "EXCLUDE",
              "title" : "Exclude matches"
            } ],
            "title" : "Filter behavior",
            "description" : "TODO",
            "default" : "INCLUDE"
          },
          "type" : {
            "type" : "string",
            "default" : "org.knime.core.data.def.BooleanCell",
            "configKeys" : [ "type_Internals" ]
          },
          "value" : {
            "type" : "string",
            "title" : "Value",
            "description" : "TODO",
            "default" : ""
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Filter",
      "type" : "Section",
      "elements" : [ {
        "type" : "HorizontalLayout",
        "elements" : [ {
          "type" : "Control",
          "scope" : "#/properties/model/properties/column",
          "options" : {
            "format" : "columnSelection",
            "possibleValues" : [ {
              "id" : "DoubleCol",
              "text" : "DoubleCol",
              "type" : {
                "id" : "org.knime.core.data.DoubleValue",
                "text" : "Number (double)"
              },
              "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
            }, {
              "id" : "StringCol",
              "text" : "StringCol",
              "type" : {
                "id" : "org.knime.core.data.StringValue",
                "text" : "String"
              },
              "compatibleTypes" : [ "org.knime.core.data.StringValue", "org.knime.core.data.DataValue", "org.knime.core.data.NominalValue" ]
            }, {
              "id" : "IntCol",
              "text" : "IntCol",
              "type" : {
                "id" : "org.knime.core.data.IntValue",
                "text" : "Number (integer)"
              },
              "compatibleTypes" : [ "org.knime.core.data.IntValue", "org.knime.core.data.DataValue", "org.knime.core.data.LongValue", "org.knime.core.data.DoubleValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
            }, {
              "id" : "BoolCol",
              "text" : "BoolCol",
              "type" : {
                "id" : "org.knime.core.data.BooleanValue",
                "text" : "Boolean value"
              },
              "compatibleTypes" : [ "org.knime.core.data.BooleanValue", "org.knime.core.data.DataValue", "org.knime.core.data.IntValue", "org.knime.core.data.LongValue", "org.knime.core.data.DoubleValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue", "org.knime.core.data.NominalValue" ]
            } ],
            "showNoneColumn" : false,
            "showRowKeys" : true,
            "showRowNumbers" : true,
            "showSearch" : true,
            "showMode" : true
          }
        } ]
      }, {
        "type" : "HorizontalLayout",
        "elements" : [ {
          "type" : "Control",
          "scope" : "#/properties/model/properties/operator",
          "options" : {
            "choicesProvider" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$TypeBasedOperatorChoices",
            "format" : "dropDown",
            "showNoneColumn" : false,
            "showRowKeys" : false,
            "showSearch" : true,
            "showMode" : true
          }
        }, {
          "type" : "Control",
          "scope" : "#/properties/model/properties/caseMatching",
          "options" : {
            "format" : "valueSwitch"
          },
          "rule" : {
            "effect" : "SHOW",
            "condition" : {
              "type" : "AND",
              "conditions" : [ {
                "scope" : "#/properties/model/properties/column",
                "schema" : {
                  "properties" : {
                    "compatibleTypes" : {
                      "contains" : {
                        "const" : "org.knime.core.data.StringValue"
                      }
                    }
                  }
                }
              }, {
                "scope" : "#/properties/model/properties/operator",
                "schema" : {
                  "not" : {
                    "oneOf" : [ {
                      "const" : "IS_TRUE"
                    }, {
                      "const" : "IS_FALSE"
                    }, {
                      "const" : "IS_MISSING"
                    } ]
                  }
                }
              } ]
            }
          }
        } ]
      }, {
        "type" : "HorizontalLayout",
        "elements" : [ {
          "type" : "Control",
          "scope" : "#/properties/model/properties/value",
          "rule" : {
            "effect" : "SHOW",
            "condition" : {
              "scope" : "#/properties/model/properties/operator",
              "schema" : {
                "oneOf" : [ {
                  "const" : "EQ"
                }, {
                  "const" : "NEQ"
                }, {
                  "const" : "LT"
                }, {
                  "const" : "LTE"
                }, {
                  "const" : "GT"
                }, {
                  "const" : "GTE"
                }, {
                  "const" : "FIRST_N_ROWS"
                }, {
                  "const" : "LAST_N_ROWS"
                }, {
                  "const" : "REGEX"
                }, {
                  "const" : "WILDCARD"
                } ]
              }
            }
          }
        } ]
      } ]
    }, {
      "label" : "Filter behavior",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/outputMode",
        "options" : {
          "format" : "valueSwitch"
        },
        "label" : ""
      } ]
    } ],
    "initialUpdates" : [ {
      "path" : null,
      "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$TypeBasedOperatorChoices",
      "value" : [ {
        "id" : "IS_TRUE",
        "text" : "is true"
      }, {
        "id" : "IS_FALSE",
        "text" : "is false"
      }, {
        "id" : "IS_MISSING",
        "text" : "is missing"
      } ]
    } ],
    "globalUpdates" : [ {
      "trigger" : {
        "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$SelectedColumnRef",
        "scope" : "#/properties/model/properties/column"
      },
      "dependencies" : [ {
        "scope" : "#/properties/model/properties/column",
        "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$SelectedColumnRef"
      }, {
        "scope" : "#/properties/model/properties/operator",
        "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$TypeBasedOperatorChoices"
      }, {
        "scope" : "#/properties/model/properties/value",
        "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$ValueFieldCleaning"
      } ]
    }, {
      "trigger" : {
        "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$TypeBasedOperatorChoices",
        "scope" : "#/properties/model/properties/operator"
      },
      "dependencies" : [ {
        "scope" : "#/properties/model/properties/operator",
        "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$TypeBasedOperatorChoices"
      }, {
        "scope" : "#/properties/model/properties/value",
        "id" : "org.knime.base.node.preproc.filter.row3.RowFilter3NodeSettings$ValueFieldCleaning"
      } ]
    } ]
  }
}