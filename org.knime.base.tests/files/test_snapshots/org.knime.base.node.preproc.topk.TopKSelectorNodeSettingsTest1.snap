{
  "data" : {
    "model" : {
      "sortingCriteria" : [ {
        "column" : {
          "regularChoice" : "column1"
        },
        "isStringColumn" : false,
        "sortingOrder" : "DESCENDING",
        "stringComparison" : "NATURAL"
      } ],
      "filterMode" : "UNIQUE_VALUES",
      "amount" : 3,
      "missingsToEnd" : true,
      "rowOrder" : "INPUT_ORDER"
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Number of rows / unique values",
            "description" : "The number of rows to select from the input table based on the specified mode.",
            "default" : 5
          },
          "filterMode" : {
            "oneOf" : [ {
              "const" : "ROWS",
              "title" : "Rows"
            }, {
              "const" : "UNIQUE_VALUES",
              "title" : "Unique values"
            } ],
            "title" : "Filter mode",
            "description" : "Specifies the mode for the top k selection of the output\n<ul>\n<li><b>Rows</b>: Returns the top k rows based on their first occurrence in the input table.</li>\n<li><b>Unique values</b>: Returns all rows associated with the top k unique values.</li>\n</ul>",
            "default" : "ROWS"
          },
          "missingsToEnd" : {
            "type" : "boolean",
            "title" : "Sort missing values to end",
            "description" : "If selected, missing values are always considered to be smaller to present cells.",
            "default" : true
          },
          "rowOrder" : {
            "oneOf" : [ {
              "const" : "SORTED",
              "title" : "Sorted"
            }, {
              "const" : "INPUT_ORDER",
              "title" : "Input order"
            }, {
              "const" : "ARBITRARY",
              "title" : "Arbitrary"
            } ],
            "title" : "Output order",
            "description" : "Depending on the settings of the algorithm the order might change in the output and this option allows you to specify constraints on the order.\n\n<ul>\n<li><b>Sorted</b>: The rows in the output are sorted according to the specified selection criteria.</li>\n<li><b>Input order</b>: The input order is reestablished for the rows returned by the algorithm. This requires sorting the output table.\n</li>\n<li><b>Arbitrary</b>: The rows are directly output in the order they are returned in by the algorithm. This option doesn't incur any additional runtime costs. Note: It is possible but not guaranteed that the output order is the same as the input order\n</li>\n</ul>",
            "default" : "SORTED"
          },
          "sortingCriteria" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "column" : {
                  "type" : "object",
                  "properties" : {
                    "regularChoice" : {
                      "type" : "string"
                    },
                    "specialChoice" : {
                      "oneOf" : [ {
                        "const" : "ROW_ID",
                        "title" : "RowID"
                      } ]
                    }
                  },
                  "title" : "Column",
                  "description" : "Sort rows by the values in this column. If you set multiple sorting criteria, the table is sorted by the first criterion. The following criteria are only considered, if the comparison by all previous criteria results in a tie.",
                  "default" : {
                    "regularChoice" : "column1"
                  }
                },
                "isStringColumn" : {
                  "type" : "boolean",
                  "default" : false
                },
                "sortingOrder" : {
                  "oneOf" : [ {
                    "const" : "ASCENDING",
                    "title" : "Ascending"
                  }, {
                    "const" : "DESCENDING",
                    "title" : "Descending"
                  } ],
                  "title" : "Order",
                  "description" : "Specifies the sorting order:\n<ul>\n<li><b>Ascending</b>: The smallest or earliest in the order will appear at the top of the list. E.g., for numbers the sort is smallest to largest, for dates the sort will be oldest dates to most recent.</li>\n<li><b>Descending</b>: The largest or latest in the order will appear at the top of the list. E.g., for numbers the sort is largest to smallest, for dates the sort will be most recent dates to oldest.</li>\n</ul>",
                  "default" : "ASCENDING"
                },
                "stringComparison" : {
                  "oneOf" : [ {
                    "const" : "NATURAL",
                    "title" : "Natural"
                  }, {
                    "const" : "LEXICOGRAPHIC",
                    "title" : "Lexicographic"
                  } ],
                  "title" : "String comparison",
                  "description" : "Specifies which type of sorting to apply to the strings:\n<ul>\n<li><b>Natural</b>: Sorts strings by treating the numeric parts of a string as one character. For example, results in sort order “'Row1', 'Row2', 'Row10'”.</li>\n<li><b>Lexicographic</b>: Sorts strings so that each digit is treated as a separated character. For example, results in sort order “'Row1', 'Row10', 'Row2'”.</li>\n</ul>",
                  "default" : "NATURAL"
                }
              }
            },
            "title" : "Sorting",
            "description" : "A list of sorting critera.",
            "default" : [ {
              "column" : {
                "regularChoice" : "column1"
              },
              "isStringColumn" : false,
              "sortingOrder" : "ASCENDING",
              "stringComparison" : "NATURAL"
            } ]
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Sorting",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/sortingCriteria",
        "options" : {
          "detail" : [ {
            "type" : "Control",
            "scope" : "#/properties/column",
            "options" : {
              "format" : "singleSelection",
              "specialChoices" : [ {
                "id" : "ROW_ID",
                "text" : "RowID"
              } ],
              "choicesProvider" : "org.knime.base.node.preproc.topk.TopKSelectorNodeSettings$TopKCriterionColumnChoicesProvider"
            }
          }, {
            "type" : "Control",
            "scope" : "#/properties/sortingOrder",
            "options" : {
              "format" : "valueSwitch"
            }
          }, {
            "type" : "Control",
            "scope" : "#/properties/stringComparison",
            "options" : {
              "isAdvanced" : true,
              "format" : "valueSwitch"
            },
            "rule" : {
              "effect" : "SHOW",
              "condition" : {
                "scope" : "#/properties/isStringColumn",
                "schema" : {
                  "const" : true
                }
              }
            }
          } ],
          "addButtonText" : "Add sorting criterion",
          "arrayElementTitle" : "Criterion",
          "showSortButtons" : true,
          "elementDefaultValueProvider" : "org.knime.base.node.preproc.topk.TopKSelectorNodeSettings$TopKDefaultValueProvider"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/missingsToEnd",
        "options" : {
          "format" : "checkbox"
        }
      } ]
    }, {
      "label" : "Filter",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/filterMode",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/amount",
        "options" : {
          "validations" : [ {
            "id" : "min",
            "parameters" : {
              "min" : 1.0,
              "isExclusive" : false
            },
            "errorMessage" : "The value must be at least 1."
          }, {
            "id" : "max",
            "parameters" : {
              "max" : 9.007199254740991E15,
              "isExclusive" : false
            },
            "errorMessage" : "Value too large to process without risking precision loss (> 9007199254740991)."
          } ]
        }
      } ]
    }, {
      "label" : "Output Sorting",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/rowOrder",
        "options" : {
          "format" : "valueSwitch"
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "sortingCriteria" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "column" : {
                  "type" : "object",
                  "properties" : {
                    "regularChoice" : { },
                    "specialChoice" : {
                      "configPaths" : [ ]
                    }
                  },
                  "configKey" : "columnV2",
                  "deprecatedConfigKeys" : [ {
                    "deprecated" : [ [ "column" ] ]
                  } ]
                },
                "isStringColumn" : {
                  "configPaths" : [ ]
                },
                "sortingOrder" : { },
                "stringComparison" : { }
              }
            },
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ [ "columns" ], [ "order" ], [ "alphaNumStringComp" ] ]
            }, {
              "deprecated" : [ [ "columns" ], [ "order" ] ]
            } ]
          },
          "filterMode" : {
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ [ "selectionMode" ] ]
            }, {
              "deprecated" : [ ]
            } ]
          },
          "amount" : {
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ [ "k" ] ]
            } ]
          },
          "missingsToEnd" : { },
          "rowOrder" : {
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ [ "outputOrder" ] ]
            } ]
          }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scopes" : [ "#/properties/model/properties/sortingCriteria", "#/properties/isStringColumn" ],
    "id" : null,
    "values" : [ {
      "indices" : [ 0 ],
      "value" : true
    } ]
  }, {
    "scopes" : null,
    "id" : "org.knime.base.node.preproc.topk.TopKSelectorNodeSettings$TopKCriterionColumnChoicesProvider",
    "values" : [ {
      "indices" : [ 0 ],
      "value" : [ {
        "id" : "column1",
        "text" : "column1",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      } ]
    } ]
  }, {
    "scopes" : null,
    "id" : "org.knime.base.node.preproc.topk.TopKSelectorNodeSettings$TopKDefaultValueProvider",
    "values" : [ {
      "indices" : [ ],
      "value" : {
        "column" : {
          "specialChoice" : "ROW_ID"
        },
        "isStringColumn" : false,
        "sortingOrder" : "ASCENDING",
        "stringComparison" : "NATURAL"
      }
    } ]
  } ],
  "globalUpdates" : [ {
    "trigger" : {
      "id" : "org.knime.base.node.preproc.topk.TopKSelectorNodeSettings$SortingCriteriaRef",
      "scopes" : [ "#/properties/model/properties/sortingCriteria" ]
    },
    "dependencies" : [ {
      "scopes" : [ "#/properties/model/properties/sortingCriteria" ],
      "id" : "org.knime.base.node.preproc.topk.TopKSelectorNodeSettings$SortingCriteriaRef"
    }, {
      "scopes" : [ "#/properties/model/properties/sortingCriteria", "#/properties/column" ],
      "id" : "org.knime.base.node.util.preproc.SortingUtils$SortingCriterionSettings$ColumnRef"
    } ]
  }, {
    "trigger" : {
      "id" : "org.knime.base.node.util.preproc.SortingUtils$SortingCriterionSettings$ColumnRef",
      "scopes" : [ "#/properties/model/properties/sortingCriteria", "#/properties/column" ]
    },
    "dependencies" : [ {
      "scopes" : [ "#/properties/model/properties/sortingCriteria", "#/properties/column" ],
      "id" : "org.knime.base.node.util.preproc.SortingUtils$SortingCriterionSettings$ColumnRef"
    } ]
  } ]
}