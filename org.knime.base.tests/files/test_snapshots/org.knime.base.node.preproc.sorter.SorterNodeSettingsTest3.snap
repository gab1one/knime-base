{
  "data" : {
    "model" : {
      "sortingCriteria" : [ {
        "column" : {
          "selected" : "<row-keys>",
          "compatibleTypes" : [ "org.knime.core.data.StringValue", "org.knime.core.data.DataValue", "org.knime.core.data.NominalValue" ]
        },
        "sortingOrder" : "ASCENDING",
        "stringComparison" : "NATURAL"
      } ],
      "sortMissingCellsToEndOfList" : false,
      "sortInMemory" : false
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "sortInMemory" : {
            "type" : "boolean",
            "title" : "Sort in memory",
            "description" : "If selected the table is sorted in memory which requires more memory, but is faster. In case the input table is large and memory is scarce it is recommended not to check this option.",
            "default" : false
          },
          "sortMissingCellsToEndOfList" : {
            "type" : "boolean",
            "title" : "Sort missing values to end of table",
            "description" : "If selected missing values are always placed at the end of the sorted output. This is independent of the sort order, i.e. if sorted ascendingly they are considered to be larger than a non-missing value and if sorted descendingly they are smaller than any non-missing value.",
            "default" : false
          },
          "sortingCriteria" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "column" : {
                  "type" : "object",
                  "properties" : {
                    "compatibleTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "selected" : {
                      "type" : "string"
                    }
                  },
                  "title" : "Column",
                  "description" : "Sort rows by the values in this column. If you set multiple sorting criteria, the table is sorted by the first criterion. The following criteria are only considered, if the comparison by all previous criteria results in a tie.",
                  "default" : {
                    "selected" : "test1",
                    "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
                  }
                },
                "sortingOrder" : {
                  "oneOf" : [ {
                    "const" : "ASCENDING",
                    "title" : "Ascending"
                  }, {
                    "const" : "DESCENDING",
                    "title" : "Descending"
                  } ],
                  "title" : "Order",
                  "description" : "Specifies the sorting order:\n<ul>\n<li><b>Ascending</b>: The smallest or earliest in the order will appear at the top of the list. E.g., for numbers the sort is smallest to largest, for dates the sort will be oldest dates to most recent.</li>\n<li><b>Descending</b>: The largest or latest in the order will appear at the top of the list. E.g., for numbers the sort is largest to smallest, for dates the sort will be most recent dates to oldest.</li>\n</ul>",
                  "default" : "ASCENDING"
                },
                "stringComparison" : {
                  "oneOf" : [ {
                    "const" : "NATURAL",
                    "title" : "Natural"
                  }, {
                    "const" : "LEXICOGRAPHIC",
                    "title" : "Lexicographic"
                  } ],
                  "title" : "String comparison",
                  "description" : "Specifies which type of sorting to apply to the strings:\n<ul>\n<li><b>Natural</b>: Sorts strings by treating the numeric parts of a string as one character. For example, results in sort order “'Row1', 'Row2', 'Row10'”.</li>\n<li><b>Lexicographic</b>: Sorts strings so that each digit is treated as a separated character. For example, results in sort order “'Row1', 'Row10', 'Row2'”.</li>\n</ul>",
                  "default" : "NATURAL"
                }
              }
            },
            "title" : "Sorting",
            "description" : "A list of sorting critera.",
            "default" : [ {
              "column" : {
                "selected" : "test1",
                "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
              },
              "sortingOrder" : "ASCENDING",
              "stringComparison" : "NATURAL"
            } ]
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Sorting",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/sortingCriteria",
        "options" : {
          "detail" : [ {
            "type" : "Control",
            "scope" : "#/properties/column",
            "options" : {
              "format" : "columnSelection",
              "possibleValues" : [ {
                "id" : "test1",
                "text" : "test1",
                "type" : {
                  "id" : "org.knime.core.data.DoubleValue",
                  "text" : "Number (double)"
                },
                "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
              }, {
                "id" : "test2",
                "text" : "test2",
                "type" : {
                  "id" : "org.knime.core.data.StringValue",
                  "text" : "String"
                },
                "compatibleTypes" : [ "org.knime.core.data.StringValue", "org.knime.core.data.DataValue", "org.knime.core.data.NominalValue" ]
              } ],
              "showNoneColumn" : false,
              "showRowKeys" : true,
              "showSearch" : true,
              "showMode" : true
            }
          }, {
            "type" : "Control",
            "scope" : "#/properties/sortingOrder",
            "options" : {
              "format" : "valueSwitch"
            }
          }, {
            "type" : "Control",
            "scope" : "#/properties/stringComparison",
            "options" : {
              "isAdvanced" : true,
              "format" : "valueSwitch"
            },
            "rule" : {
              "effect" : "SHOW",
              "condition" : {
                "scope" : "#/properties/column",
                "schema" : {
                  "properties" : {
                    "compatibleTypes" : {
                      "contains" : {
                        "const" : "org.knime.core.data.StringValue"
                      }
                    }
                  }
                }
              }
            }
          } ],
          "addButtonText" : "Add sorting criterion",
          "arrayElementTitle" : "Criterion",
          "showSortButtons" : true
        }
      } ]
    }, {
      "label" : "Special Values and Performance",
      "type" : "Section",
      "options" : {
        "isAdvanced" : true
      },
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/sortMissingCellsToEndOfList",
        "options" : {
          "format" : "checkbox"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/sortInMemory",
        "options" : {
          "format" : "checkbox"
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "sortingCriteria" : {
            "type" : "array",
            "deprecatedConfigKeys" : [ {
              "new" : [ [ ] ],
              "deprecated" : [ [ "incllist" ], [ "alphaNumStringComp" ], [ "sortOrder" ] ]
            } ],
            "items" : {
              "type" : "object",
              "properties" : {
                "column" : {
                  "type" : "object",
                  "properties" : {
                    "selected" : { },
                    "compatibleTypes" : {
                      "configPaths" : [ ]
                    }
                  }
                },
                "sortingOrder" : { },
                "stringComparison" : { }
              }
            }
          },
          "sortMissingCellsToEndOfList" : {
            "configKey" : "missingToEnd"
          },
          "sortInMemory" : {
            "configKey" : "sortinmemory"
          }
        }
      }
    }
  }
}