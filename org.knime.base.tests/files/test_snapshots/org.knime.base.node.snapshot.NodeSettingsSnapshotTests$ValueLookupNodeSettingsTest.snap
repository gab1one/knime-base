{
  "data" : {
    "model" : {
      "searchDirection" : "FORWARD",
      "matchBehaviour" : "EQUAL",
      "stringMatchBehaviour" : "FULLSTRING",
      "caseSensitive" : true,
      "lookupColumnOutput" : "RETAIN",
      "columnNoMatchReplacement" : "RETAIN",
      "dictValueCols" : {
        "selected" : [ "test1", "test2" ],
        "mode" : "MANUAL",
        "patternFilter" : {
          "pattern" : "",
          "isCaseSensitive" : false,
          "isInverted" : false
        },
        "manualFilter" : {
          "manuallySelected" : [ "test1", "test2" ],
          "manuallyDeselected" : [ ],
          "includeUnknownColumns" : true
        },
        "typeFilter" : {
          "selectedTypes" : [ ],
          "typeDisplays" : [ ]
        }
      },
      "createFoundCol" : false,
      "enableHiliting" : false
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "caseSensitive" : {
            "type" : "boolean",
            "title" : "Match strings case-sensitive",
            "description" : "When enabled, the string matching will be case-sensitive, otherwise case-insensitive.",
            "default" : true
          },
          "columnNoMatchReplacement" : {
            "oneOf" : [ {
              "const" : "RETAIN",
              "title" : "Retain"
            }, {
              "const" : "INSERT_MISSING",
              "title" : "Insert missing"
            } ],
            "title" : "If no match found",
            "description" : "Defines the content of the lookup column if no match is found in the dictionary table.\n    If \"Retain\" is selected, the cell is left as is.\n    If \"Insert missing\" is selected, a missing value is used as content for the cell in the lookup column.\n",
            "default" : "RETAIN"
          },
          "createFoundCol" : {
            "type" : "boolean",
            "title" : "Append a column indicating whether a match was found",
            "description" : "When checked, a new column \"Match Found\" is appended to the output that contains a boolean indicating whether a match was found.",
            "default" : false
          },
          "dictKeyCol" : {
            "type" : "string",
            "title" : "Key column (dictionary table)",
            "description" : "The column in the dictionary table that contains the search key / criterion."
          },
          "dictValueCols" : {
            "type" : "object",
            "properties" : {
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "includeUnknownColumns" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "manuallyDeselected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "manuallySelected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "manuallySelected" : [ ],
                  "manuallyDeselected" : [ ],
                  "includeUnknownColumns" : false
                }
              },
              "mode" : {
                "oneOf" : [ {
                  "const" : "MANUAL",
                  "title" : "Manual"
                }, {
                  "const" : "REGEX",
                  "title" : "Regex"
                }, {
                  "const" : "WILDCARD",
                  "title" : "Wildcard"
                }, {
                  "const" : "TYPE",
                  "title" : "Type"
                } ],
                "default" : "MANUAL"
              },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "isCaseSensitive" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "isInverted" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "pattern" : {
                    "type" : "string",
                    "default" : ""
                  }
                },
                "default" : {
                  "pattern" : "",
                  "isCaseSensitive" : false,
                  "isInverted" : false
                }
              },
              "selected" : {
                "default" : [ ],
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "typeDisplays" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "text" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "default" : {
                  "selectedTypes" : [ ],
                  "typeDisplays" : [ ]
                }
              }
            },
            "title" : "Append columns (from dictionary table)",
            "description" : "The columns in the dictionary table that contain the values added to the data table.",
            "default" : {
              "selected" : [ "test1", "test2" ],
              "mode" : "MANUAL",
              "patternFilter" : {
                "pattern" : "",
                "isCaseSensitive" : false,
                "isInverted" : false
              },
              "manualFilter" : {
                "manuallySelected" : [ "test1", "test2" ],
                "manuallyDeselected" : [ ],
                "includeUnknownColumns" : true
              },
              "typeFilter" : {
                "selectedTypes" : [ ],
                "typeDisplays" : [ ]
              }
            }
          },
          "enableHiliting" : {
            "type" : "boolean",
            "title" : "Enable hiliting",
            "description" : "Enable hiliting between the dictionary table and the output table.",
            "default" : false
          },
          "lookupCol" : {
            "type" : "string",
            "title" : "Lookup column (data table)",
            "description" : "The column in the data table that will be used to look up cells in the dictionary."
          },
          "lookupColumnOutput" : {
            "oneOf" : [ {
              "const" : "RETAIN",
              "title" : "Retain"
            }, {
              "const" : "REPLACE",
              "title" : "Replace"
            }, {
              "const" : "REMOVE",
              "title" : "Remove"
            } ],
            "title" : "Lookup column output",
            "description" : "Defines the content of the column that is selected as lookup column (data table).\nIf \"Retain\" the content of the lookup column is left unchanged.\nIf \"Replace\" is selected, the cell contents are replaced with values from the dictionary table.\nIf a match is found, the selected column's value is inserted, otherwise the original value can be kept\nor a missing value can be inserted. The name of the column does not change.\nIf \"Delete\" is selected, the lookup column is removed entirely from the output table.\n",
            "default" : "RETAIN"
          },
          "lookupReplacementCol" : {
            "type" : "string",
            "title" : "Replacement column",
            "description" : "The column from the dictionary table that provides\nthe new values for the lookup column in the data table.\n"
          },
          "matchBehaviour" : {
            "oneOf" : [ {
              "const" : "EQUAL",
              "title" : "Insert missing values"
            }, {
              "const" : "EQUALORSMALLER",
              "title" : "Match next smaller"
            }, {
              "const" : "EQUALORLARGER",
              "title" : "Match next larger"
            } ],
            "title" : "If no row matches",
            "description" : "Defines what happens when a lookup key is not present in the dictionary: If \"Insert missing values\" is selected, missing values are inserted. If \"Match next smaller\" (\"- larger\") is selected, the next smaller (larger) value from the dictionary is matched, based on the value of the lookup key. If no such element can be found, a missing value is inserted.",
            "default" : "EQUAL"
          },
          "searchDirection" : {
            "oneOf" : [ {
              "const" : "FORWARD",
              "title" : "Use first"
            }, {
              "const" : "BACKWARD",
              "title" : "Use last"
            } ],
            "title" : "If multiple rows match",
            "description" : "Defines the behavior in case there are multiple matching keys in the dictionary table.",
            "default" : "FORWARD"
          },
          "stringMatchBehaviour" : {
            "oneOf" : [ {
              "const" : "FULLSTRING",
              "title" : "Full string"
            }, {
              "const" : "SUBSTRING",
              "title" : "Substring"
            }, {
              "const" : "WILDCARD",
              "title" : "Wildcard"
            }, {
              "const" : "REGEX",
              "title" : "Regex"
            } ],
            "title" : "String matching",
            "description" : "The matching behavior when matching strings: Full string matching matches a lookup string only if it exactly matches a search string. Substring matching matches a lookup string if the key in the dictionary is a substring of it. Wildcard and Regex matching match a lookup string if a pattern in the dictionary matches it.",
            "default" : "FULLSTRING"
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Matching",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/lookupCol",
        "options" : {
          "possibleValues" : [ {
            "id" : "test1",
            "text" : "test1",
            "type" : {
              "id" : "org.knime.core.data.DoubleValue",
              "text" : "Number (Floating Decimal)"
            },
            "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
          }, {
            "id" : "test2",
            "text" : "test2",
            "type" : {
              "id" : "org.knime.core.data.StringValue",
              "text" : "String"
            },
            "compatibleTypes" : [ "org.knime.core.data.StringValue", "org.knime.core.data.DataValue", "org.knime.core.data.NominalValue" ]
          } ],
          "format" : "dropDown",
          "showNoneColumn" : false,
          "showRowKeys" : false,
          "showSearch" : true,
          "showMode" : true
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/dictKeyCol",
        "options" : {
          "possibleValues" : [ {
            "id" : "test1",
            "text" : "test1",
            "type" : {
              "id" : "org.knime.core.data.DoubleValue",
              "text" : "Number (Floating Decimal)"
            },
            "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
          }, {
            "id" : "test2",
            "text" : "test2",
            "type" : {
              "id" : "org.knime.core.data.StringValue",
              "text" : "String"
            },
            "compatibleTypes" : [ "org.knime.core.data.StringValue", "org.knime.core.data.DataValue", "org.knime.core.data.NominalValue" ]
          } ],
          "format" : "dropDown",
          "showNoneColumn" : false,
          "showRowKeys" : false,
          "showSearch" : true,
          "showMode" : true
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/searchDirection",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/matchBehaviour",
        "options" : {
          "format" : "radio",
          "radioLayout" : "horizontal"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/stringMatchBehaviour",
        "options" : {
          "isAdvanced" : true,
          "format" : "valueSwitch"
        },
        "rule" : {
          "effect" : "DISABLE",
          "condition" : {
            "scope" : "#/properties/model/properties/matchBehaviour",
            "schema" : {
              "oneOf" : [ {
                "const" : "EQUALORSMALLER"
              }, {
                "const" : "EQUALORLARGER"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/caseSensitive",
        "options" : {
          "format" : "checkbox",
          "isAdvanced" : true
        },
        "rule" : {
          "effect" : "DISABLE",
          "condition" : {
            "scope" : "#/properties/model/properties/matchBehaviour",
            "schema" : {
              "oneOf" : [ {
                "const" : "EQUALORSMALLER"
              }, {
                "const" : "EQUALORLARGER"
              } ]
            }
          }
        }
      } ]
    }, {
      "label" : "Output",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/lookupColumnOutput",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/lookupReplacementCol",
        "options" : {
          "possibleValues" : [ {
            "id" : "test1",
            "text" : "test1",
            "type" : {
              "id" : "org.knime.core.data.DoubleValue",
              "text" : "Number (Floating Decimal)"
            },
            "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
          }, {
            "id" : "test2",
            "text" : "test2",
            "type" : {
              "id" : "org.knime.core.data.StringValue",
              "text" : "String"
            },
            "compatibleTypes" : [ "org.knime.core.data.StringValue", "org.knime.core.data.DataValue", "org.knime.core.data.NominalValue" ]
          } ],
          "format" : "dropDown",
          "showNoneColumn" : false,
          "showRowKeys" : false,
          "showSearch" : true,
          "showMode" : true
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/lookupColumnOutput",
            "schema" : {
              "oneOf" : [ {
                "const" : "REPLACE"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/columnNoMatchReplacement",
        "options" : {
          "format" : "valueSwitch"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/lookupColumnOutput",
            "schema" : {
              "oneOf" : [ {
                "const" : "REPLACE"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/dictValueCols",
        "options" : {
          "format" : "columnFilter",
          "possibleValues" : [ {
            "id" : "test1",
            "text" : "test1",
            "type" : {
              "id" : "org.knime.core.data.DoubleValue",
              "text" : "Number (Floating Decimal)"
            },
            "compatibleTypes" : [ "org.knime.core.data.DoubleValue", "org.knime.core.data.DataValue", "org.knime.core.data.ComplexNumberValue", "org.knime.core.data.FuzzyNumberValue", "org.knime.core.data.FuzzyIntervalValue", "org.knime.core.data.BoundedValue" ]
          }, {
            "id" : "test2",
            "text" : "test2",
            "type" : {
              "id" : "org.knime.core.data.StringValue",
              "text" : "String"
            },
            "compatibleTypes" : [ "org.knime.core.data.StringValue", "org.knime.core.data.DataValue", "org.knime.core.data.NominalValue" ]
          } ],
          "showNoneColumn" : false,
          "showRowKeys" : false,
          "showSearch" : true,
          "showMode" : true
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/createFoundCol",
        "options" : {
          "format" : "checkbox"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/enableHiliting",
        "options" : {
          "format" : "checkbox",
          "isAdvanced" : true
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "lookupCol" : { },
          "dictKeyCol" : { },
          "searchDirection" : { },
          "matchBehaviour" : { },
          "stringMatchBehaviour" : { },
          "caseSensitive" : { },
          "lookupColumnOutput" : {
            "configPaths" : [ [ "lookupColumnOutput" ] ]
          },
          "lookupReplacementCol" : { },
          "columnNoMatchReplacement" : { },
          "dictValueCols" : {
            "type" : "object",
            "properties" : {
              "selected" : {
                "configPaths" : [ ]
              },
              "mode" : { },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "pattern" : { },
                  "isCaseSensitive" : { },
                  "isInverted" : { }
                }
              },
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "manuallySelected" : { },
                  "manuallyDeselected" : { },
                  "includeUnknownColumns" : { }
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : { },
                  "typeDisplays" : {
                    "configPaths" : [ ]
                  }
                }
              }
            }
          },
          "createFoundCol" : { },
          "enableHiliting" : { }
        }
      }
    }
  }
}