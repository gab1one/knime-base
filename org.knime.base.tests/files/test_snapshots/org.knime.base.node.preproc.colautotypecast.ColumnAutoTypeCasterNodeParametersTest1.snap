{
  "data" : {
    "model" : {
      "columnFilter" : {
        "mode" : "MANUAL",
        "patternFilter" : {
          "pattern" : "",
          "isCaseSensitive" : true,
          "isInverted" : false
        },
        "manualFilter" : {
          "manuallySelected" : [ "column1", "column2", "column3", "column4", "column5" ],
          "manuallyDeselected" : [ ],
          "includeUnknownColumns" : true
        },
        "typeFilter" : {
          "selectedTypes" : [ ],
          "typeDisplays" : [ ]
        }
      },
      "dateFormat" : "dd-MM-yyyy",
      "missingValuePattern" : "mvp",
      "quickScan" : false,
      "quickScanRows" : 1000,
      "useLegacyTypeNames" : true
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "columnFilter" : {
            "type" : "object",
            "properties" : {
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "includeUnknownColumns" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "manuallyDeselected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "manuallySelected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "manuallySelected" : [ ],
                  "manuallyDeselected" : [ ],
                  "includeUnknownColumns" : false
                }
              },
              "mode" : {
                "oneOf" : [ {
                  "const" : "MANUAL",
                  "title" : "Manual"
                }, {
                  "const" : "REGEX",
                  "title" : "Regex"
                }, {
                  "const" : "WILDCARD",
                  "title" : "Wildcard"
                }, {
                  "const" : "TYPE",
                  "title" : "Type"
                } ],
                "default" : "MANUAL"
              },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "isCaseSensitive" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "isInverted" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "pattern" : {
                    "type" : "string",
                    "default" : ""
                  }
                },
                "default" : {
                  "pattern" : "",
                  "isCaseSensitive" : false,
                  "isInverted" : false
                }
              },
              "selected" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "selectedTypes" : [ ],
                  "typeDisplays" : [ ]
                }
              }
            },
            "title" : "Column filter",
            "description" : "Select the string columns to consider for automatic type casting. Only columns compatible with String are offered. The filter supports manual selection and wildcard/regex.",
            "default" : {
              "mode" : "MANUAL",
              "patternFilter" : {
                "pattern" : "",
                "isCaseSensitive" : false,
                "isInverted" : false
              },
              "manualFilter" : {
                "manuallySelected" : [ "column1", "column2", "column3", "column4", "column5" ],
                "manuallyDeselected" : [ ],
                "includeUnknownColumns" : true
              },
              "typeFilter" : {
                "selectedTypes" : [ ],
                "typeDisplays" : [ ]
              }
            }
          },
          "dateFormat" : {
            "type" : "string",
            "title" : "Choose a date format",
            "description" : "Choose or enter a date pattern used to detect dates in the selected columns. Examples: 'dd.MM.yy', 'dd.MM.yy HH:mm:ss', 'dd.MM.yy HH:mm:ss:SSS', 'HH:mm:ss'. Pattern symbols: y=Year, M=Month, d=Day, H=Hour, m=Minute, s=Second, S=Millisecond.",
            "default" : "dd.MM.yy"
          },
          "missingValuePattern" : {
            "type" : "string",
            "title" : "Missing value pattern",
            "description" : "Enter a missing value pattern applied to all included columns. Use '&lt;none&gt;' for no pattern (default) or '&lt;empty&gt;' for the empty string. Any other string will be treated as the pattern.",
            "default" : "<none>"
          },
          "quickScan" : {
            "type" : "boolean",
            "title" : "Quickscan",
            "description" : "Speed up by determining the most specific type based only on the first N rows. Note: With quickscan enabled this node may fail during execution if later rows contradict the inferred type.",
            "default" : false
          },
          "quickScanRows" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Number of rows to consider",
            "description" : "Number of initial rows used when quickscan is enabled.",
            "default" : 1000
          },
          "useLegacyTypeNames" : {
            "type" : "boolean",
            "title" : "Use legacy type names instead of identifiers",
            "description" : "Output legacy type names like 'Number (double)' on the second port instead of identifiers like 'org.knime.core.data.def.DoubleCell'. This resembles the old behavior but is discouraged as type names may change in future versions.",
            "default" : false
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "type" : "Control",
      "scope" : "#/properties/model/properties/columnFilter",
      "options" : {
        "format" : "typedStringFilter",
        "unknownValuesText" : "Any unknown column",
        "emptyStateLabel" : "No columns in this list."
      },
      "providedOptions" : [ "possibleValues" ]
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/dateFormat"
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/missingValuePattern"
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/quickScan",
      "options" : {
        "format" : "checkbox"
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/quickScanRows",
      "options" : {
        "validation" : {
          "max" : {
            "errorMessage" : "The value must not exceed 2147483647.",
            "parameters" : {
              "isExclusive" : false,
              "max" : 2.147483647E9
            }
          },
          "min" : {
            "errorMessage" : "The value must be at least 1.",
            "parameters" : {
              "isExclusive" : false,
              "min" : 1.0
            }
          }
        }
      },
      "rule" : {
        "effect" : "SHOW",
        "condition" : {
          "scope" : "#/properties/model/properties/quickScan",
          "schema" : {
            "const" : true
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/useLegacyTypeNames",
      "options" : {
        "format" : "checkbox"
      }
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "columnFilter" : {
            "configPaths" : [ [ "column-filter", "filter-type" ], [ "column-filter", "included_names" ], [ "column-filter", "excluded_names" ], [ "column-filter", "enforce_option" ], [ "column-filter", "name_pattern", "pattern" ], [ "column-filter", "name_pattern", "type" ], [ "column-filter", "name_pattern", "caseSensitive" ], [ "column-filter", "name_pattern", "excludeMatching" ] ]
          },
          "dateFormat" : {
            "configKey" : "dateFormat"
          },
          "missingValuePattern" : {
            "configKey" : "missingValuePattern"
          },
          "quickScan" : {
            "configKey" : "doAQuickScan"
          },
          "quickScanRows" : {
            "configKey" : "numberOfRowsForQuickScan"
          },
          "useLegacyTypeNames" : {
            "configKey" : "useLegacyTypeNames",
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ ]
            } ]
          }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scope" : "#/properties/model/properties/columnFilter",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "column1",
        "text" : "column1",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      }, {
        "id" : "column2",
        "text" : "column2",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      }, {
        "id" : "column3",
        "text" : "column3",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      }, {
        "id" : "column4",
        "text" : "column4",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      }, {
        "id" : "column5",
        "text" : "column5",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      } ]
    } ]
  } ]
}