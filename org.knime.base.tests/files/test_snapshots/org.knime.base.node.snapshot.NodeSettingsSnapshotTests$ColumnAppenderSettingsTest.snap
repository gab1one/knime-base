{
  "data" : {
    "model" : {
      "rowIdMode" : "IDENTICAL",
      "rowIdTableSelect" : 1
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "rowIdMode" : {
            "oneOf" : [ {
              "const" : "IDENTICAL",
              "title" : "Identical RowIDs and table lengths"
            }, {
              "const" : "GENERATE",
              "title" : "Generate new RowIDs"
            }, {
              "const" : "KEY_TABLE",
              "title" : "Use RowIDs from the selected input table"
            } ],
            "title" : "RowID mode",
            "description" : "Determines the RowIDs of the output table:<ul><li><b>Identical RowIDs and table lengths</b>: If the RowIDs in both input tables exactly match (i.e. the RowID names, their order, and their number have to match) this option can be checked in order to allow a faster execution with less memory consumption. If the RowIDs (names, order, number) don't match exactly the node execution will fail. <br/><br/>If this option <i>is NOT checked</i> the result table is newly created. This might result in a longer processing time. However, in this case the number of rows in the input tables can differ and missing values are added accordingly. The RowIDs are either generated new or taken from one of the input tables (see options below).</li><li><b>Generate new RowIDs</b>: RowIDs are newly generated. If one of the input tables is longer than the other, missing values are inserted accordingly.</li> <li><b>Use RowIDs from the selected input table</b>: The RowIDs of the table at the selected input port number are used. Tables with fewer rows will be filled with missing values accordingly. And tables with more rows will be truncated.</li></ul>",
            "default" : "IDENTICAL"
          },
          "rowIdTableSelect" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "RowID table number",
            "description" : "Select the table whose RowIDs should be used for the output table.",
            "default" : 1
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "type" : "Control",
      "scope" : "#/properties/model/properties/rowIdMode",
      "options" : {
        "format" : "radio",
        "radioLayout" : "vertical"
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/rowIdTableSelect",
      "options" : {
        "validations" : [ {
          "id" : "min",
          "parameters" : {
            "min" : 1.0,
            "isExclusive" : false
          },
          "errorMessage" : "The value must be at least 1."
        } ],
        "validationProviders" : [ "org.knime.base.node.preproc.columnappend2.ColumnAppenderSettings$NumTablesMaxValidation" ]
      },
      "rule" : {
        "effect" : "SHOW",
        "condition" : {
          "scope" : "#/properties/model/properties/rowIdMode",
          "schema" : {
            "oneOf" : [ {
              "const" : "KEY_TABLE"
            } ]
          }
        }
      }
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "rowIdMode" : {
            "configPaths" : [ [ "selected_rowid_mode" ] ]
          },
          "rowIdTableSelect" : {
            "configPaths" : [ [ "selected_rowid_table" ], [ "selected_rowid_table_number" ] ]
          }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scopes" : null,
    "id" : "org.knime.base.node.preproc.columnappend2.ColumnAppenderSettings$NumTablesMaxValidation",
    "values" : [ {
      "indices" : [ ],
      "value" : {
        "id" : "max",
        "parameters" : {
          "max" : 1.0,
          "isExclusive" : false
        },
        "errorMessage" : "Only 1 table input ports available."
      }
    } ]
  } ]
}